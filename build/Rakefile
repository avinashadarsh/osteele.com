RSYNC_HOSTNAME = 'osteele.com'
RSYNC_TARGET_DIR = 'osteele.com'

desc "Push to server"
task :push do
  push
end

desc "Push to staging server"
task :staging do
  RSYNC_TARGET_DIR.sub!(/.*/, 'staging.osteele.com')
  push
end

desc "Show what would be pushed"
task :dry_run do
  ENV['DRY_RUN'] = 'true'
  push
end

namespace :wp do
  task :admin do
    sh "open http://osteele.com/wp/wp-admin"
  end

  task :pull do
    rsync("#{RSYNC_HOSTNAME}:#{RSYNC_TARGET_DIR}/wp",
          File.join(File.dirname(__FILE__), '../wp'))
  end
end

desc "Create the cache directories"
task :make_cache_dirs do
  paths = %w[sources/javascript sources/php tools/reanimator tools/rework tools/svn2ics wp/wp-content].map {|path| "osteele.com/#{path}/cache"}
  cmds = paths.map { |path| "mkdir -p #{path}; chmod a+w #{path}" }
  cmd = cmds.join("; ")
  sh "ssh #{RSYNC_HOSTNAME} '#{cmd}'"
end

task :sites do
  options = %w[-avz --delete --delete-after --exclude-from] +
    [File.join(File.dirname(__FILE__), 'rsync.exclude')]
  src = File.join(File.dirname(__FILE__), '../sites')
  sh "rsync #{options.join(' ')} #{src}/ #{RSYNC_HOSTNAME}:sites"
end

def rsync(src, target, options={})
  args = ['-avz']
  args << '-n' if ENV['DRY_RUN']
  args << '--delete'
  args << '--delete-after'
  args << "--exclude-from #{File.join(File.dirname(__FILE__), 'rsync.exclude')}"
  args << '--exclude wp' if options.delete(:exclude_wp)
  sh "rsync #{args.join(' ')} #{src}/ #{target}"
end

def push
  src = File.join(File.dirname(__FILE__), '..')
  rsync(src, "#{RSYNC_HOSTNAME}:#{RSYNC_TARGET_DIR}", :exclude_wp => true)
end
