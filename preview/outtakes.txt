


Another distinction is whether a name requires a prefix _at it's point of use_, as well as where 


Often the file that a name is in determines its context.  A reference to @List@ in a Java file that begins with @import java.util.List@ refers to a different entity than a reference in a file that begins with @import java.awt.List@.

This is how namespaces work in XML.  The tag name in @<tagname/>@ refers to @{urn:ns1}tagname@ if it's in a file that begins with @<root xmlns="urn:ns1">@, and to @{urn:ns2}tagname@ if it's in a file that begins with @<root xmlns="urn:ns2">@.

This kind of name qualification (association of a name with a namespace) is a kind of _action at a distance_.  The declarations in one portion of a source file (the beginning) affect how names are resolved in another portion (the occurrence of the name).

Sometimes the namespace of a name is written at the location of the use of the name, to avoid the maintenance and readability action-at-a-distance.

Another kind of context is the syntactic position of a name.  In Java, @a.x@ is one context in the statement @int x = a.x;@, and another context in the statement @int x = a.x();@.  


The first case is same as the difference between tag names and attributes in XML.  The tag name and the attribute name in @<name name="value">@ are in different contexts, and don't have anything to do with each other even though they're share the same spelling.  This is particularly evident when dealing with XML Namespace declarations, where the tag name may be in a non-empty namespace (for example, if the 

A context can even be dynamic (computed at runtime).  The value of @glob@ in the the Python code below can't be computed at compile time.  In Python, in contrast to Java and XML, namespaces have runtime values.  (This makes Python both exceptionally powerful and difficult to compile efficiently.)

<code>
try:
  from myglob import glob
except ImportError:
  from glob import glob
print glob('*.html')
</code>

just-in-=time resolution

.h3 Namespaces in XML

Namespaces in XML 

Definition: each source location within an XML document is defined with resect to a namespace.

Qualified imports:
|_Java_|<code>import java.lang.Math</code>|<code>Math.min(1,2)</code>|
|_Python_|<code>import Math</code>|<code>Math.min(1,2)</code>|
|_XML_|<code>xmlns:xhtml="..."</code>|<code><xhtml:b>x<xhtml:b></code>|

Unqualified imports:
|_Java_|<code>import java.lang.Math</code>|<code>min(1,2)</code>|
|_Python_|<code>from Math import min</code>|<code>min(1,2)</code>|
|_XML_|||



h3. Proof of concept: Two-way Transforms

Disambiguate based on a namespace

Remove redundant implicit namespace prefixes

h3. 


h3. Cons: Forwards compatability

h3. Binding time and target audience

