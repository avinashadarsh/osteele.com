Computing a sequence of change windows from a sequence of diff actions:
- Keep a running index into prior and post
- 

Text
====
Insertion:
  [a, b, c] ->
  [a, b, b+, c]

Deletion:
  [a, b, c] ->
  [a, c]

Change:
  [a,b,c] ->
  [a, b', c]

Rule
====
Insertion:
  I see -> I +am seeing

Deletion:
  I am seeing -> I 0 see

Change:
  I see -> He' sees'


Ideas
====
Each *post* has an index into where it was *pre*


Rule has a left context length, a prior, a post, and a right context length

Text has a list of change regions

A change region is a position, a prior length, and a post length

The list of change regions is constructed from the diff:
- round up all the locations

Maybe better would be a bitmap of which words are changed?  How would this affect insertions?