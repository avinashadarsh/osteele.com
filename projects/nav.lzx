<!--
convert -background transparent label:'(enter search text here)' label.png
convert -background transparent -fill red label:'(enter search text here)' red.png
-->
<canvas height="22" layout="axis: x; spacing: 20" proxied="false">

<include href="incubator/roundrectbutton.lzx" />

<dataset name="ds" src="http:projects.xml" request="true"/>

<greenstyle name="greenish" />
<purplestyle name="purplish" />
<goldstyle name="goldish" />
<silverstyle name="silverish" />
<bluestyle name="blueish" />
<whitestyle name="whiteish" />

<script><![CDATA[
function findProjectsByTag(tags) {
  var projects = ds.data.childNodes;
  var indices = [];
  for (var i = 0; i < projects.length; i++) {
    var p = projects[i];
    var ptags = ' ' + p.attributes['tags'] + ' ';
    var match = true;
    for (var j = 0; j < tags.length; j++) 
      match &= ptags.indexOf(' '+ tags[j] + ' ') >= 0;
    if (match) indices.push(i);
  }
  return indices;
}

function searchProjects(str) {
  var words = str.toLowerCase().split();
  if (words[0] == '') words.pop();
  var projects = ds.data.childNodes;
  var indices = [];
  for (var i = 0; i < projects.length; i++) {
    var text = projects[i].attributes['text'];
    var match = true;
    for (var j = 0; j < words.length; j++)
      match &= text.indexOf(words[j]) >= 0
    if (match) indices.push(i);
  }
  return indices;
}

function arrayToString(ar) {
  var s = '';
  for (var i = 0; i < ar.length; i++) {
    if (i) s += ',';
     s += ar[i];
  }
  return '[' + s + ']';
}

function selectProjects(ar) {
  var s = arrayToString(ar);
  s = 'selectProjects(' + s + ')';
  Debug.write(s);
  LzBrowser.loadJS(s);
}
]]></script>

<class name="tagsearchbutton" extends="roundrectbutton" height="20">
  <attribute name="tags" type='text'/>
  <method event="onclick">
    var tagArray = tags.split(' ');
    if (tagArray[0] == '') tagArray.pop();
    selectProjects(findProjectsByTag(tagArray));
  </method>
</class>

<tagsearchbutton text="All" tags="" style="goldish"/>
<tagsearchbutton text="Current" tags="active" style="silverish"/>
<tagsearchbutton text="Sites" tags="website" style="blueish"/>
<tagsearchbutton text="Pages" tags="applet" style="purplish"/>
<tagsearchbutton text="Downloads" tags="download" style="greenish"/>

<view>
  <tagsearchbutton id="tagInputButton" text="Search:" style="whiteish">
    <method name="execute" event="onclick">
      if (tagInput.getText()=='') {
        feeble.doStart();
        return;
      }
      selectProjects(searchProjects(tagInput.getText()));
    </method>
  </tagsearchbutton>
  <edittext id="tagInput" x="${tagInputButton.x+tagInputButton.width+5}" y="1" height="20" width="130">
    <method event="onkeyup" args="k">
      blackPrompt.animate('opacity', 0, 500);
      tagInputButton.execute();
      Debug.write('key');
    </method>
    <method event="onfocus">
      blackPrompt.animate('opacity', 0, 500);
    </method>
    <method event="onblur">
      if (this.getText() == '') blackPrompt.animate('opacity', 0.5, 500);
    </method>
  </edittext>
  <view id="blackPrompt" opacity="0.5" x="${tagInput.x+0}" y="2" resource="label.png" options="ignorelayout"/>
  <view id="redPrompt" opacity="0.0" x="${tagInput.x+0}" y="2" resource="red.png" options="ignorelayout">
    <animatorgroup id="feeble" start="false" process="simultaneous"
		   duration="150" repeat="2">
      <animatorgroup>
	<animator attribute="opacity" to="1.0"/>
	<animator attribute="opacity" to="0.0"/>
      </animatorgroup>
      <animatorgroup>
	<animator attribute="opacity" to="0.0" target="blackPrompt"/>
	<animator attribute="opacity" to="0.5" target="blackPrompt"/>
      </animatorgroup>
    </animatorgroup>
  </view>
</view>

<text align="right" options="ignorelayout"
      fgcolor="${Math.floor(this.value) * 0x010101}"
      onmouseover="animate('value', 0x20, 400)"
      onmouseout="animate('value', 0xe8, 2000)"
      oninit="animate('value', 0xe8, 5000)"
      onclick="LzBrowser.loadURL('http://www.openlaszlo.org')">
  <attribute name="value" value="0x00"/>
  <u>Powered by OpenLaszlo</u>
</text>

<debug y="40" height="${parent.height - this.y}"/>
</canvas>
