                         Oliver Steele - Résumé


Contact Information:

Oliver Steele
Amherst, MA 01002

Phone: 617.233-5232
Fax: 419.730-9057
Email: steele@osteele.com
URL: http://osteele.com


Employment History:

    Software and IP Consultant
    Oliver Steele Consulting
    December 2006-Present
    
    Independent software consultant with specialties in web software
    development, interactive visualization, and NLP.
    
    Achievements:
    * Designed and implemented the client-side data model and transport
      for the calendar portion of GoWebtop.com.
    * Created the seatmap application, and significant portions of Rails
      back end, for FanSnap.com. "You did more in one month than a
      previous team of five developers did in three months."
    * Implemented a C++ layout engine that helped the client win a large
      aerospace contract.
    * Advised legal clients on software patent issues.
    
    
    Founder / CTO
    StyleCart, Inc.
    July 2007-April 2008
    
    StyleCart is a visual shopping cart that allows users to arrange
    product photography on a web page. The product is marketed to
    internet retailers.
    
    Achievements:
    * Responsible for all aspects of architecture and implementation.
    * Drafted core 80-page patent, which is now pending.
    
    
    Founder / CTO
    Dotted Pair, Inc.
    April 2006-July 2007
    
    Dotted Pair developed and is marketing an innovative retail catalog
    browsing engine that is currently in invitational beta.
    
    Achievements:
    * Designed and implemented the core server and client functionality.
    * Created the algorithms and architecture which form the IP core of
      the company. These form the basis for a 70-page provisional
      patent.
    * Project management for the core product.
    
    
    VP of OpenLaszlo
    Laszlo Systems, Inc.
    October 2005-January 2006
    
    OpenLaszlo created a platform for building web applications, with a
    declarative user interface, constraint-based layout and data
    binding, and animation. (This approach was later used in Macromedia
    Flex and Microsoft WPF.) I created the user interface language,
    wrote the compiler for it, and held a range of positions within the
    company to develop the product and promote its use.
    
    During this period I continued the work on OpenLaszlo that I had
    begun as Chief Software Architect, defining goals for the success of
    the open source project and working to build community interest in
    the project. I also implemented the OpenLaszlo on Rails plugin, as a
    tool for leveraging the success of the Ruby on Rails project and
    community.
    
    
    Acting VP of Engineering
    Laszlo Systems, Inc.
    June 2005-September 2005
    
    I moved my family to California for the summer of 2005, and commuted
    for a month afterwards, to fill in as a VP of Engineering. I was
    offered the position on a permanant basis, but didn't want to move
    my family at that time.
    
    Achievements:
    * Managed a team of 20, including development, web operations, and
      corporate IT.
    * Delivered multiple releases to multiple customers on schedule
    * Oversaw scalability and security qualifications
    
    
    Chief Software Architect; Director of the Boston Office
    Laszlo Systems, Inc.
    December 2001-June 2005
    
    Achievements:
    * Founded and ran the Boston office. Recruited the East Coast
      product development team
    * Presented the company and technology at industry conferences
    * Managed our IBM development relationship, which led to the release
      of IDE4Laszlo, Faces for Laszlo, the inclusion of the OpenLaszlo
      platform in IBM’s ETTK (Enterprise Technology Tool Kit)
    * Designed the Laszlo XML programming language
    * Launched and lead the OpenLaszlo (open source) project
    * Lead the documentation effort and created and then oversaw the
      documentation tools
    * Involved in all aspects of product development and marketing
      strategy
    * Implemented the Laszlo (XML and JavaScript) compiler
    * Created several inventions which became the companies core IP, and
      are the subject of pending patent applications
    
    
    CTO
    AlphaMask, Inc.
    June 2000-October 2001
    
    AlphaMask was a technology company based upon a 2D graphics software
    library developed at Headspin, Inc. During my tenure I developed a
    product line and participated in selling the company to OpenWave.
    
    Achievements:
    * Defined a product suite with server, desktop, and embedded
      editions.
    * Created SVG and SMIL interpreters and transcoders.
    * Created XML, server-side imaging, and image transcoding products
    * Created tools for distributing custom source and binary
      distributions.
    
    
    Technical Consultant
    Lexeme, Inc.
    1999-2000
    
    Lexeme (later LingoMotors) created a knowledge extraction system
    that parsed natural langage into structured semantic structures, and
    used these structures to implement natural-language query response
    and description categorization (as for a product catalog or
    location-based event listing).
    
    Achievements:
    * Extended the Lexeme chart parser with rules composed of
      regular-expression patterns over lexical, syntactic, and semantic
      tests.
    * Created a graphical workbench for linguists to edit and test these
      patterns.
    * Created disambiguation algorithms for prioritizing parses based on
      lexical frequency, and on coverage of partially parsed utterances.
    * Extended the web server with session management facilities and
      Smalltalk-based dynamic server page extensions.
    * Built infrastructure: unit-testing, automated error recovery email
      and email notification daemons for the server.
    
    
    Research Assistant
    Brandeis CS Department
    1999-2000
    
    Medstract was a project to use natural-langauge processing
    techniques to create a catalogue of gene and protein interactions
    from abstracts in the Medline database.
    
    Projects:
    * Teaching Assistant: Artifical Intelligence
    * Teaching Assistant: Natural Language Processing
    * Medstract
    
    Achievements:
    * TA'd courses in Scheme, Artificial Intelligence, and Language
      Processing. This included lectures and designing problems sets as
      well as grading.
    * Created a regular-expression to FSA compiler, an FSA optimizer, a
      chart-parser with FSA rules, a rule compiler that combined
      multiple FSAs into a single FSA with multiple labelled terminal
      nodes, and a node compiler that compiled an FSA node and arcs into
      a decision tree.
    
    
    Chief Epistemology Officer
    Method Software, Inc.
    1997-1998
    
    Method Software developed a Java client-server system for hosting
    multiplayer role-playing games. After a business model for online
    gaming failed to materialize, this was repurposed into a a distance
    learning tool for online business negotiation.
    
    Achievements:
    * Designed and implemented a Scheme-based language for defining
      objects, properties, and rules for a game world, and for defining
      non-player characters (NPCs) and their behaviors and grammars.
    * Implemented an NPC parser, a command-line parser for a subset of
      imperative English, and a scene and event description generator.
    * Managed a set of products to release specific games and engine
      versions to customers and trade shows; all were delivered on time.
    
    
    Technical Consultant
    Apple Advanced Technology Group
    1996-1996
    
    Achievements:
    * Ported a UNIX-based system for managing the stages of information
      extraction with Makefiles and textual intermediate files to MacOS.
      Wrote a dataflow management system whose components communicated
      via streams of objects.
    * Sped up the pattern matcher by an order of magnitude by rewriting
      to use CPS with memoization.
    * Ported C/Lex/Yacc tools for parsing pattern rule specifications
      from UNIX to MacOS.
    
    
    Project Lead
    Apple Cambridge Research
    1992-1995
    
    Script compiler, architecture, language design
    
    Projects:
    * Apple Dylan
    
    Achievements:
    * Lead the team that developed an IDE for the Dylan programming
      language. This included source code management, definition
      dependency tracking for navigation and recompilation, and novel
      source and runtime navigation and debugging browsers that received
      several patents.
    * Evangelized the product within the company, and to the executive
      staff.
    * Contributed to all management and technical aspects of the
      project.
    * Contributed overall system design, and major design and
      implementation work on most subsystems of the IDE.
    * Contributed to the design of the Dylan programming language.
    
    
    Software Engineer
    Apple Computer, Inc.
    June 1989-April 1992
    
    Quickdraw GX was a 2D graphics and rendering engine for the
    Macintosh operating system. It was shipped with MacOS System 7, and
    remained part of the operating system distribution until MacOS X
    when it and Quickdraw were replaced by Quartz.
    
    Projects:
    * Quickdraw GX
    
    Achievements:
    * Contributed to all parts of the project, including architecture;
      also developed many project-related tools and utilities.
    * Designed and implemented system for injecting automatic parameter
      validation assertions into the source code.
    * Prototyped a port to the AMD graphics accelarator.
    * Principal designer of the software that was used to demonstrate
      the system to management and that was shipped as demonstration
      software to developers.
    * Prepared and presented talks and demos to the executive staff and
      to developers.
    * Most valuable individual contributor.
    

Education:

    Graduate work in Computer Science
    Brandeis University
    
    Graduate work in Linguistics
    UMass Amherst
    
    BA in Linguistics
    University of North Carolina at Chapel Hill
    

Publications:

    Alex Martelli. Python Cookbook. O'Reilly. July 2002.
    Contributor.

    Margaret Minsky, Ming Ouh-young, Oliver Steele, Frederick P.
    Brooks, Jr., Max Behensky. "Feeling and Seeing: Issues in Force
    Display". OCF, New York, New York. March 1990. 235-243.

    Margaret Minsky, Ming Ouh-young, Oliver Steele, Frederick P.
    Brooks, Jr., Max Behensky. "Feeling and Seeing: Issues in Force
    Display". Multimedia Interface Design. ACM Press. 1992. 289-306.

    US Patent #6,005,566, "Aspect and style elements of an improved
    graphical user interface", Jeremy Jones; Neil L. Mayle; Paige K.
    Parsons; Andrew L. M. Shalit; William W. St. Clair, Jr.; Oliver
    W. Steele; Steven H. Strassman; Derek R. White; December 21,
    1999.

    US Patent #7,275,105, "Enabling online and offline operation",
    David T. Temkin; Oliver W. Steele; Christopher Kimm; Pablo Kang;
    Max D. Carlson; Eric D. Block; September 25, 2007.

    US Patent Application #20050114871, "System for optimizing
    application start-up", Adam G. Wolff; Oliver W. Steele; David T.
    Temkin; P. Tucker Withington; May 26, 2005.

    US Patent Application #20050039165, "Evaluating expressions in a
    software environment" Adam G. Wolff; Oliver W. Steele; David T.
    Temkin; P. Tucker Withington; Henry B. Minsky; February 17,
    2005.

    US Patent Application #20050038796, "Application data binding",
    Max D. Carlson; Oliver W. Steele; Adam G. Wolff; February 17,
    2005.

    US Patent Application #20030195923, "Presentation server", Eric
    D. Bloch; Max D. Carlson; Christopher Kimm; James B. Simister;
    Oliver W. Steele; David T. Temkin; Adam G. Wolff; October 16,
    2003.

    US Patent Application #???????????, "System and method for
    interacting with item catalogs on a computer", Neil L. Mayle;
    Oliver W. Steele; David L. Rose; December, 2007.
    "The Laszlo application description language", MIT Lightweight
    Language Workshop 2, Cambridge, MA, 2002.

    "The Laszlo Platform for Declarative UI Development", XTech
    2005, Amsterdam.

    "OpenLaszlo: A Python Success Story", PyCon 2005, Washington DC.

    "RIA Architecture and platforms", SAM-SIG 2005, Mountainview,
    CA, 2005.

    "Programming in XML", Google Tech Talk Series, Mountainview, CA,
    2004


Programming Languages:

    C, C++, Common Lisp, Dylan, Haskell, Python, Java, JavaScript,
    Pascal, PHP, Python, Ruby, Scheme, Smalltalk, XSLT, Assembly.
  

Awards:

    * Webby Award, The International Academy of Digital Arts and
      Sciences, 2002 for the Laszlo Presentation Server* Best Arcade Game of the Year, Creative Computing magazine, 1984
      for Pogo Joe for the Commodore 64

Interests:

    * Math Education. I'm interested in math education; especially what
      can be done to better serve advanced students. I teach a small
      group of fourth graders at the local elementary school, and have
      developed a curriculum for teach abstract algebra at the
      elementary level.
    * Open Source Software. I like to read and write open source
      software in my off hours. It's fun, and it allows me to explore
      techniques that are too risky to try out on a funded project with
      a hard deadline. My more popular contributions include PyWordNet
      (now a part of the Natural Language Tool Kit), OpenLaszlo:JSON,
      OpenLaszlo:Ruby, and Functional JavaScript. The OpenLaszlo project
      itself (which I serially architected, managed, and directed) was
      an exception in that it was funded, and that it was not originally
      an open-source project.
    * Programming Languages. I like learning languages that teach me new
      ways to think about programming. The good ones also teach me new
      ways to think about project management, executive management, and
      life.
    

Last modified December 2008.
