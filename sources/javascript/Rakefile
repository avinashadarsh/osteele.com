require 'rdoc/markup/simple_markup'
require 'rdoc/markup/simple_markup/to_html'

class LinkingHtml < SM::ToHtml
  def handle_special_LINK(special)
    _, text, href = /(.*?)\[(.*)\]/.match(special.text).to_a
    text = $1 if text =~ /^\{(.*)\}$/
    "<a href=\"#{href}\">#{text}</a>"
  end
  
  def handle_special_URL(special)
    url, suffix = special.text, ''
    if url =~ /(.*)([\W\/])$/
      url, suffix = $1, $2
    end
    "<a href=\"#{url}\">#{url}</a>" + suffix
  end
end

task 'textcanvas-doc.php' => ['textcanvas.js', 'Rakefile'] do |t|
  p = SM::SimpleMarkup.new
  p.add_special(/(\w+\[.*?\])/, :LINK)
  p.add_special(/(\{(.*?\}|\w+)\[.*?\])/, :LINK)
  p.add_special(/((http|https|mailto):[\S]*)/, :URL)
  h = LinkingHtml.new
  
  input = File.open('textcanvas.js') {|f| f.read}
  raise 'no doc' unless input =~ /.*?\/\*(?:\s*\n)?(.*?)\s*\*\/.*/m
  input = $1
  input.gsub!(/(?:^)  /m, '\1')
  input.gsub!(/(Author|Copyright|Homepage|License): /, '\1:: ')
  File.open(t.name, 'w') do |f|
    f << "<?php $title='TextCanvas'; ?>\n"
    f << "<?php include('../../includes/header.php'); ?>\n"
    f << "<h1><?php echo $title; ?></h1>\n"
    f << p.convert(input, h)
    f << "<?php include('../../includes/footer.php'); ?>\n"
  end
end
