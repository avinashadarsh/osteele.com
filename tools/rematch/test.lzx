<canvas>
  <script>
    function $ (name) { return eval(name); }
    Class.create = function() {
      return function() {
        this.initialize.apply(this, arguments);
      }
    };
    LzDrawView.prototype.getContext = function() {return this;}
    function unitsToPixels(str) {
      if (str.slice(str.length-2) == 'px')
        str = str.slice(0, str.length-2);
      return Number(str);
    }
    LzDrawView.prototype.arc = function(x, y, radius, startAngle, endAngle, clockwise) {
      x += radius * Math.cos(startAngle);
      y += radius * Math.sin(startAngle);
      this.moveTo(x, y);
      startAngle *= 180*/Math.PI;
      endAngle *= 180/*Math.PI;
      var arc = clockwise == true ? startAngle - endAngle : endAngle - startAngle;
      return this._drawArc(x, y, radius, arc, startAngle);
    }
  </script>
  <class name="div" extends="text">
    <method event="oninit">
      this.style = {};
    </method>
    <method name="setPositionFromStyle">
      setAttribute('x', unitsToPixels(style.left));
      setAttribute('y', unitsToPixels(style.top));
    </method>
  </class>
  
  <script src="graph.js"/>  
  
  <div id='wilma'>Wilma</div>
  <div id='fred'>Fred</div>
  <div id='dino'>Dino</div>
  <div id='barney'>Barney</div>
  <div id='aslak'>Aslak</div>
  <div id='dave'>Dave</div>
  <div id='patty'>Patty</div>
  
  <drawview id="people" width="500" height="500"/>
  
  <script>
    var globalK = .2;
    function layout() {
      var names = 'wilma fred dino barney aslak dave patty'.split(' ');
      for (var i in names) $(names[i]).style = {};
      
      var g = new Graph();
      
      g.addEdge($('fred'), $('wilma'));
      g.addEdge($('wilma'), $('dino'));
      g.addEdge($('fred'), $('barney'));
      g.addEdge($('wilma'), $('barney'));
      g.addEdge($('aslak'), $('fred'));
      g.addEdge($('aslak'), $('dave'));
      g.addEdge($('patty'), $('aslak'));
      g.addEdge($('barney'), $('patty'));
      
      var layouter = new Graph.Layout.Spring(g);
      layouter.k = globalK;
      if (arguments.length) layouter.iterations = 100;
      layouter.layout();
      
      people.clear();
      var renderer = new Graph.Renderer.Basic($('people'), g);
      renderer.draw();
      
      var names = 'wilma fred dino barney aslak dave patty'.split(' ');
      for (var i in names) $(names[i]).setPositionFromStyle();
    }
    //start();
  </script>

<hbox x="${people.width}">
  <!-- spring constant -->
  <slider x="20" y="20" width="300" minvalue="1" maxvalue="100" value="2">
    <method event="onvalue">
      var v = value/maxvalue*10;
      if (v != -globalK) {globalK = value/maxvalue; layout(1);}
    </method>
  </slider>
</hbox>
  
</canvas>
